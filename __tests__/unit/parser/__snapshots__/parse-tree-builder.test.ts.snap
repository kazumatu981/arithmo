// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unittest-parse-tree-builder Can build tree from (1+1)*2 1`] = `
{
  "left": {
    "childrenRoot": {
      "left": {
        "type": "single",
        "value": "1",
      },
      "right": {
        "type": "single",
        "value": "1",
      },
      "type": "binary",
      "value": "+",
    },
    "type": "paren",
    "value": "()",
  },
  "right": {
    "type": "single",
    "value": "2",
  },
  "type": "binary",
  "value": "*",
}
`;

exports[`unittest-parse-tree-builder Can build tree from -(1-(-1+5)) 1`] = `
{
  "childrenRoot": {
    "left": {
      "type": "single",
      "value": "1",
    },
    "right": {
      "childrenRoot": {
        "left": {
          "type": "single",
          "value": "-1",
        },
        "right": {
          "type": "single",
          "value": "5",
        },
        "type": "binary",
        "value": "+",
      },
      "type": "paren",
      "value": "()",
    },
    "type": "binary",
    "value": "-",
  },
  "type": "paren",
  "value": "-()",
}
`;

exports[`unittest-parse-tree-builder Can build tree from -1+1 1`] = `
{
  "left": {
    "type": "single",
    "value": "-1",
  },
  "right": {
    "type": "single",
    "value": "1",
  },
  "type": "binary",
  "value": "+",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1*12+1 1`] = `
{
  "left": {
    "left": {
      "type": "single",
      "value": "1",
    },
    "right": {
      "type": "single",
      "value": "12",
    },
    "type": "binary",
    "value": "*",
  },
  "right": {
    "type": "single",
    "value": "1",
  },
  "type": "binary",
  "value": "+",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1*12+3*4 1`] = `
{
  "left": {
    "left": {
      "type": "single",
      "value": "1",
    },
    "right": {
      "type": "single",
      "value": "12",
    },
    "type": "binary",
    "value": "*",
  },
  "right": {
    "left": {
      "type": "single",
      "value": "3",
    },
    "right": {
      "type": "single",
      "value": "4",
    },
    "type": "binary",
    "value": "*",
  },
  "type": "binary",
  "value": "+",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1+(-1) 1`] = `
{
  "left": {
    "type": "single",
    "value": "1",
  },
  "right": {
    "childrenRoot": {
      "type": "single",
      "value": "-1",
    },
    "type": "paren",
    "value": "()",
  },
  "type": "binary",
  "value": "+",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1+(3*3)+1 1`] = `
{
  "left": {
    "left": {
      "type": "single",
      "value": "1",
    },
    "right": {
      "childrenRoot": {
        "left": {
          "type": "single",
          "value": "3",
        },
        "right": {
          "type": "single",
          "value": "3",
        },
        "type": "binary",
        "value": "*",
      },
      "type": "paren",
      "value": "()",
    },
    "type": "binary",
    "value": "+",
  },
  "right": {
    "type": "single",
    "value": "1",
  },
  "type": "binary",
  "value": "+",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1+1 1`] = `
{
  "left": {
    "type": "single",
    "value": "1",
  },
  "right": {
    "type": "single",
    "value": "1",
  },
  "type": "binary",
  "value": "+",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1-(-1+5) 1`] = `
{
  "left": {
    "type": "single",
    "value": "1",
  },
  "right": {
    "childrenRoot": {
      "left": {
        "type": "single",
        "value": "-1",
      },
      "right": {
        "type": "single",
        "value": "5",
      },
      "type": "binary",
      "value": "+",
    },
    "type": "paren",
    "value": "()",
  },
  "type": "binary",
  "value": "-",
}
`;

exports[`unittest-parse-tree-builder Can build tree from 1-1 1`] = `
{
  "left": {
    "type": "single",
    "value": "1",
  },
  "right": {
    "type": "single",
    "value": "1",
  },
  "type": "binary",
  "value": "-",
}
`;

exports[`unittest-parse-tree-builder Cannot build tree from -(1 1`] = `"括弧ノードは閉じられる必要があります。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1 1 1`] = `"予期せぬ数字を検出しました。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1(1+3) 1`] = `"予期せぬ左括弧を検出しました。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1*(3*4 1`] = `"括弧ノードは2または3の字句を持つ必要があります。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1+ 1`] = `"演算子ノードに右の子ノードがありません。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1+() 1`] = `"予期せぬ右括弧を検出しました。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1+(3)) 1`] = `"予期せぬ右括弧を検出しました。"`;

exports[`unittest-parse-tree-builder Cannot build tree from 1--1-1 1`] = `"予期せぬ演算子を検出しました。"`;
